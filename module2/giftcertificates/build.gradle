plugins {
    id 'war'
}

group 'com.epam.esm'
version '1.0'

repositories {
    mavenCentral()
}

ext {
    springVersion = '6.0.3'
    postgresqlVersion = "42.5.1"
    jacksonVersion = "2.14.1"
    mapstructVersion = "1.5.3.Final"
    liquibaseVersion = '4.19.0'
    lombokMapstructBindingVersion = "0.2.0"
    servletVersion = "6.0.0"
    lombokVersion = "1.18.24"
    mockitoVersion = '4.11.0'
    junitVersion = '5.9.2'
    testContainersVersion = '1.17.6'
}

dependencies {
    implementation "org.springframework:spring-core:${springVersion}"
    implementation "org.springframework:spring-context:${springVersion}"
    implementation "org.springframework:spring-web:${springVersion}"
    implementation "org.springframework:spring-webmvc:${springVersion}"
    implementation "org.springframework:spring-jdbc:${springVersion}"
    implementation "org.postgresql:postgresql:${postgresqlVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "org.liquibase:liquibase-core:${liquibaseVersion}"

    implementation "jakarta.servlet:jakarta.servlet-api:${servletVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation "org.springframework:spring-test:${springVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.testcontainers:testcontainers:${testContainersVersion}"
    testImplementation "org.testcontainers:junit-jupiter:${testContainersVersion}"
    testImplementation "org.testcontainers:postgresql:${testContainersVersion}"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

test {
    useJUnitPlatform()
}