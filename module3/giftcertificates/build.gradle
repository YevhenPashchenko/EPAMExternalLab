plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'jacoco'
}

group = 'com.epam.esm'
version = '1.0'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('mapstructVersion', '1.5.3.Final')
	set('lombokMapstructBindingVersion', '0.2.0')
	set('testcontainersVersion', "1.17.6")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	implementation 'org.liquibase:liquibase-core'

	compileOnly 'org.projectlombok:lombok'
	compileOnly 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	runtimeOnly 'org.postgresql:postgresql'

	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'

	testCompileOnly 'org.projectlombok:lombok'

	testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
